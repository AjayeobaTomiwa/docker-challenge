default.conf
#  chyliper.mooo.com redirect
server {
    listen 80;
    server_name chyliper.mooo.com www.chyliper.mooo.com;

    # http to https traffick redirecting
    location / {
        return 301 https://chyliper.mooo.com$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name chyliper.mooo.com www.chyliper.mooo.com;

    # from www to non-www just in case
    if ($host = 'www.chyliper.mooo.com') {
        return 301 https://chyliper.mooo.com$request_uri;
    }

    # key paths and ssl certificates
    ssl_certificate /etc/letsencrypt/live/npm-5/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/npm-5/privkey.pem;

    location /api {
        proxy_pass http://backend:8000/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /docs {
        proxy_pass http://backend:8000/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /redoc {
        proxy_pass http://backend:8000/redoc;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /prometheus {
        proxy_pass http://prometheus:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /grafana {
        proxy_pass http://grafana:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        proxy_pass http://frontend:5173;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# db.chyliper.mooo.com redirect
server {
    listen 80;
    server_name db.chyliper.mooo.com www.db.chyliper.mooo.com;

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://db.chyliper.mooo.com$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name db.chyliper.mooo.com www.db.chyliper.mooo.com;

    # Redirect www to non-www
    if ($host = 'www.db.chyliper.mooo.com') {
        return 301 https://db.chyliper.mooo.com$request_uri;
    }

    # Add your SSL certificate and key paths here
    ssl_certificate /etc/letsencrypt/live/npm-6/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/npm-6/privkey.pem;

    location / {
        proxy_pass http://adminer:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# nginx.chyliper.mooo.com redirect
server {
    listen 80;
    server_name nginx.chyliper.mooo.com www.nginx.chyliper.mooo.com;

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://nginx.chyliper.mooo.com$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name nginx.chyliper.mooo.com www.nginx.chyliper.mooo.com;

    # Redirect www to non-www
    if ($host = 'www.nginx.chyliper.mooo.com') {
        return 301 https://nginx.chyliper.mooo.com$request_uri;
    }

    # ssl certificates and keypaths
    ssl_certificate /etc/letsencrypt/live/npm-7/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/npm-7/privkey.pem;

    location / {
        proxy_pass http://nginx:81;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
